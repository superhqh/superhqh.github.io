{"meta":{"title":"David.H","subtitle":"","description":"","author":"superhqh","url":"http://superhqh.github.io","root":"/"},"pages":[],"posts":[{"title":"router","slug":"router","date":"2020-01-05T07:01:55.501Z","updated":"2020-01-06T18:11:48.902Z","comments":true,"path":"2020/01/05/router/","link":"","permalink":"http://superhqh.github.io/2020/01/05/router/","excerpt":"","text":"#由路由器引发的联想 ###网络运营商网络运营商就是为用户提供网络服务的供应商，包含电信运营商。在国内原本有六大基础网络运营商，分别是中国移动，中国联通，中国电信，中国网通，中国铁通以及中国卫通。原中国联通和中国网通合并为现在的中国联通，原铁通与中国移动合并为现在的中国移动，原联通的CDMA网与中国电信合并为现在的中国电信，从而形成了中国移动、中国联通、中国电信三足鼎立之势。（来源：https://wiki.mbalib.com/wiki/网络运营商 ） ##路由器的几个重要的功能：无线AP、PPPoE拨号上网功能、交换机、DHCP服务器##路由器的几个重要的协议：DHCP、NAT、ARP ##路由器的无线AP功能路由器的无线AP（Acess Point）功能不停地向周围广播信标帧（beacon frame），告诉附近的设备这里存在一个AP，快来连接吧。同时你手上的设备（手机、笔记本等）也会不停地发送探测请求帧（Probe frame），寻找哪里有可以连接的AP。信标帧中含有路由器设备的Mac地址、SSID（给人看的无线网络标识）以及BSSID（给机器看的无线网络标识）等等。探测请求帧中含有客户端设备的Mac地址。客户端设备发现AP之后，就可以输入用户名以及密码来连接路由器了。 ##路由器的DHCP功能 ###为什么上网需要IP地址和Mac地址？计算机科班出身的人或者对计算机原理有过了解的人都知道我们上网需要两个地址，即：IP地址和Mac地址。为什么我们需要两个地址才能上网呢？只用一个地址来标识自身为什么不行呢？####如果只有Mac地址我们知道计算机是诞生在上个世纪的美国，主要目的是为了赢得战争。随着计算机的出现，因特网也开始发展起来，但是最初人们没有想到因特网能够发展成一个全球性的网络。一开始网络规模小，都是使用Mac地址来通信。早期的集线器和交换机就是这样通过Mac地址来转发数据包，但是工作方式不一样。 集线器和交换机将局域网内的各个设备连接起来的方式都是通过实体的网线，每个设备通过网线连接到集线器或者交换机的一个端口上。对于集线器来说，假如局域网中的A终端要向B终端发信息，A会把数据先发送给集线器，然后集线器会把数据以广播的方式发送给局域网内的所有机器B、C、D、E…。对于交换机来说，A也会先把数据发送给交换机，然后交换机通过其内部的Mac地址表找到目标主机对应的端口，然后将数据通过这个端口转发给目的主机。也就是说，交换机相比与集线器多了个“记忆”的功能，能够记住局域网内每个设备连接在自己的哪个端口上。 随着互联网规模的扩大，终端设备分布在天南海北，假如生活在北京的小黄要和生活在深圳的小王通信，怎么实现呢？通过交换机的方式行不通了，人们开始把网络划分成很多的子网，一个交换机连接一个子网内的所有设备，小黄发的消息通过很多的交换机转发给小王，这时候的交换机就变成了现在的路由器，不仅能够给局域网内的设备转发数据，还能给外网的设备通过路由的方式来转发数据。可是如果只有Mac地址好像还是无法实现远距离通信的需求，怎么办呢？这时候人们开始使用了IP地址。我们知道Mac地址是烧录在网卡上的，全球唯一且相互之间没有联系，而IP地址是和地域相关的。同一个子网内的设备，IP地址的前缀都是一样的，这样路由器通过IP地址的前缀就知道目的主机在哪个子网上了。通过这种方式路由器只需要记住每个子网的位置就可以了，不需要过多的内存占用。 ####如果只有IP地址上面说到只有Mac地址是不能满足小黄和小王之间的通信需求的，那如果只有IP地址呢？当然也不可以，部分原因与历史遗留问题有关。早期人们通过Mac地址通信，在生产网卡的时候会携带一个全球唯一的Mac地址。所以设备从出厂就含有唯一标识自身的Mac地址，IP地址是需要通过设备连接到路由器之后来设置的。那如果每个设备出厂的时候在网卡上烧录的是IP地址呢？目前IPv4地址的数量是有限的，在十亿的数量级，因此在网卡上烧录IP地址来唯一地标识一个设备也是不可取的，不过或许在网卡上烧录IPv6地址是可行的。 ####IP地址的静态配置和动态获取终端设备上网需要有一个IP地址，IP地址的获取有两种方式：静态配置和动态获取。静态配置是指人工来配置IP地址、网关、子网掩码、DNS服务器。动态获取是指通过路由器的DHCP功能为机器自动地进行配置。（这里要进行的延伸：静态配置和动态获取的优缺点，DHCP的工作原理，网关的作用，子网掩码的作用，DNS服务器是怎么获取的） 一个设备往另一个设备发送数据链路层的数据包时必须要知道另一个设备的Mac地址，一般设备会先将数据包发送给局域网中的路由器，路由器的ARP协议使得设备能够知道路由器的Mac地址，从而实现链路层数据包的发送。（这里要进行的延伸：ARP协议的原理，为什么局域网中的设备会知道要先把数据包发送给路由器） 由于IPv4的地址有限，所以不同局域网中的设备可能会被分配到相同的IP地址，如果这两个设备同时往一个服务器中取数据，服务器就区分不开来了。此时路由器的功能就体现出来了，路由器通过PPPoE拨号上网的方式连入运营商网络的时候获得了一个唯一的外网地址。设备在访问外网的时候通过NAT协议对源IP地址和Mac地址进行转换然后再发送给目的服务器。（延伸：NAT协议的原理，网关不是唯一的吗？如果网关是唯一的，为什么会有不同局域网内的设备被分配到相同的IP地址的情况？，PPPoE拨号上网的原理，IPv6在逐步推行的过程中是不是就不需要NAT这种协议了？） ##路由器的防火墙功能 ##路由器的路由功能：RIP，OSPF，BGP等","categories":[],"tags":[]},{"title":"first day","slug":"first-day","date":"2019-12-02T13:22:43.000Z","updated":"2019-12-02T14:13:32.709Z","comments":true,"path":"2019/12/02/first-day/","link":"","permalink":"http://superhqh.github.io/2019/12/02/first-day/","excerpt":"","text":"我展示的是一级标题我展示的是二级标题一级标题二级标题三级标题四级标题五级标题六级标题安装依赖包安装基础组件1apt install -y vim wget build-essential p7zip-full locate lrzsz dstat2apt install -y golang tcpdump masscan aria2 pixiewps3apt install -y libpcap-dev libnetfilter-queue-dev libusb-dev libdbus-1-dev libglib2.0-dev libudev-dev libical-dev libreadline-dev matchbox-keyboard libssl-dev libpcap-dev libcurl4-openssl-dev 安装服务1apt install -y redsocks dnsmasq bluez-tools tcpdump 安装功能1apt install -y aircrack-ng wifite mdk3 shadowsocks-libev hostapd 配置网络配置网络接口1cat &gt; &#x2F;etc&#x2F;network&#x2F;interfaces.d&#x2F;lo &lt;&lt;EOFMARKER2auto lo3iface lo inet loopback4EOFMARKER56cat &gt; &#x2F;etc&#x2F;network&#x2F;interfaces.d&#x2F;wlan0 &lt;&lt;EOFMARKER7allow-hotplug wlan08iface wlan0 inet manual9EOFMARKER1011cat &gt; &#x2F;etc&#x2F;network&#x2F;interfaces.d&#x2F;eth0 &lt;&lt;EOFMARKER12auto eth013iface eth0 inet static14address 172.16.44.115netmask 255.255.255.016EOFMARKER 配置防火墙1iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE2iptables -A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT3iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT45iptables -t nat -A POSTROUTING -s 192.168.0.0&#x2F;16 -o wlan1 -j MASQUERADE6iptables-save &gt; &#x2F;etc&#x2F;iptables.ipv4.nat 配置服务配置dhcp服务1cat &gt; &#x2F;etc&#x2F;dhcpcd.conf &lt;&lt;EOFMARKER2hostname3clientid4persistent5option rapid_commit6option domain_name_servers, domain_name, domain_search, host_name7option classless_static_routes8option ntp_servers9option interface_mtu10require dhcp_server_identifier11slaac private12interface wlan0 13static ip_address&#x3D;192.168.0.1&#x2F;2414EOFMARKER151617#echo interface wlan0 &gt;&gt; &#x2F;etc&#x2F;dhcpcd.conf 18#static ip_address&#x3D;192.168.0.1&#x2F;24 &gt;&gt; &#x2F;etc&#x2F;dhcpcd.conf 配置dns服务1cat &gt; &#x2F;etc&#x2F;dnsmasq.conf &lt;&lt;EOFMARKER2dhcp-mac&#x3D;set:client_is_a_pi,B8:27:EB:*:*:*3dhcp-reply-delay&#x3D;tag:client_is_a_pi,24server&#x3D;218.2.2.25server&#x3D;114.114.114.1146server&#x3D;8.8.8.87domain-needed8bogus-priv9dhcp-range&#x3D;192.168.0.100,192.168.0.254,48h10EOFMARKER 配置功能配置Wi-Fi热点功能1cat &gt; &#x2F;etc&#x2F;hostapd&#x2F;hostapd.conf &lt;&lt;EOFMARKER2interface&#x3D;wlan03driver&#x3D;nl802114ssid&#x3D;Ziroom9015hw_mode&#x3D;g6channel&#x3D;17ieee80211n&#x3D;18wpa&#x3D;29wpa_passphrase&#x3D;400100111110wpa_key_mgmt&#x3D;WPA-PSK11wmm_enabled&#x3D;112ht_capab&#x3D;[HT40][SHORT-GI-20][DSSS_CCK-40]13macaddr_acl&#x3D;014auth_algs&#x3D;115ignore_broadcast_ssid&#x3D;016wpa&#x3D;217wpa_key_mgmt&#x3D;WPA-PSK18rsn_pairwise&#x3D;CCMP19EOFMARKER 安装代理功能1cat &gt; &#x2F;opt&#x2F;docker&#x2F;ss&#x2F;docker-compose.yml &lt;&lt;EOF2version: &#39;2&#39;3services:4 sskcp:5 image: mritd&#x2F;shadowsocks:3.1.36 network_mode: host7 environment:8 SS_CONFIG : &quot;-s 0.0.0.0 -p 22222 -m aes-256-cfb -k vpnpassword --fast-open -u&quot;9 KCP_FLAG: &quot;true&quot;10 KCP_MODULE: kcpserver11 KCP_CONFIG: &quot;-t 127.0.0.1:22222 -l :22223 -mode fast2&quot;12EOF","categories":[],"tags":[{"name":"RaspberryPi","slug":"RaspberryPi","permalink":"http://superhqh.github.io/tags/RaspberryPi/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-12-02T11:54:41.910Z","updated":"2019-12-02T11:54:41.910Z","comments":true,"path":"2019/12/02/hello-world/","link":"","permalink":"http://superhqh.github.io/2019/12/02/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}